---
- debug: var=wsgi_user
- debug: var=git_clone
- debug: var=git_version
- debug: var=os_version
- debug: var=required.os

- name: Ensure pre-requiste
  assert:
    that:
      - os_version in required.os

- name: Deploy from git
  when: git_clone|bool
  block:
    - name: Create user
      become: true
      become_user: root
      user:
        name: "{{ wsgi_user }}"
        comment: Liftree applicatif user
        shell: /bin/bash
  
    - name: Clone git repo on user home
      become: true
      become_user: "{{ wsgi_user }}"
      git:
        repo: "{{ git_repo }}"
        dest: /home/{{ wsgi_user }}/{{ git_name }}
        version: "{{ git_version }}"
        force: yes 

- name: Configure liftree
  become: true
  become_user: root
  block:
    - name: Create config directory
      file:
        path: /etc/liftree/conf.d/
        state: directory
        group: "{{ wsgi_user }}"

    - name: Deploy logging configuration
      template:
        src: logging.conf
        dest: /etc/liftree/logging.conf

    - name: Deploy liftree entry point configuration
      template:
        src: liftree.conf
        dest: /etc/liftree/liftree.conf

    - name: Deploy liftree example config
      copy:
        dest: /etc/liftree/conf.d/00-example.conf
        content: |
          ---
          name: /home/{{ wsgi_user }}/liftree/apps/example
          ...

    - name: Update permission to allow apache reach wsgi
      file:
        path: /home/{{ wsgi_user }}
        state: directory
        mode: 0755

- include_tasks: "{{ ansible_distribution|lower }}.yml"

- name: Test liftree installation
  tags:
    - tests
  block:
    - name: Final show test
      uri:
        url: "{{ wsgi_base_url }}/show"
        return_content: true
      register: register_show_test
      failed_when:
        - register_show_test.status == 200
        - register_show_test.content is not search("<!-- unittest -->")

    - name: Final search test
      uri:
        url: "{{ wsgi_base_url }}/search"
        return_content: true
        body_format: json
      register: register_search_test
      failed_when:
        - register_search_test.status == 200
        - register_search_test.json.files.forbidden[0]|basename != "test.secret"

- name: Display demo url
  debug:
    msg: Go on {{ wsgi_base_url }}/show to test
...